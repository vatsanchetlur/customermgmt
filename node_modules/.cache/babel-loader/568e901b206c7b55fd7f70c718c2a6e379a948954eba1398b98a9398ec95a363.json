{"ast":null,"code":"var _jsxFileName = \"/Users/n0096336/Downloads/FullStack/capstone2/customer-management-app/src/components/CustomerForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomerForm = ({\n  selectedCustomer,\n  onSave,\n  onDelete,\n  onCancel\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: ''\n  });\n  const [emailError, setEmailError] = useState('');\n\n  // Update form when a customer is selected or deselected\n  useEffect(() => {\n    if (selectedCustomer) {\n      setFormData({\n        name: selectedCustomer.name,\n        email: selectedCustomer.email,\n        password: selectedCustomer.password\n      });\n    } else {\n      setFormData({\n        name: '',\n        email: '',\n        password: ''\n      });\n    }\n  }, [selectedCustomer]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    if (name === 'email') {\n      if (!value) {\n        setEmailError('Email is required.');\n      } else if (!/\\S+@\\S+\\.\\S+/.test(value)) {\n        setEmailError('Please enter a valid email address.');\n      } else {\n        setEmailError('');\n      }\n    }\n  };\n  const handleSave = () => {\n    // Validate email before saving\n    if (!formData.email) {\n      setEmailError('Email is required.');\n      return;\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      setEmailError('Please enter a valid email address.');\n      return;\n    } else {\n      setEmailError('');\n    }\n\n    // Don't save if all fields are empty\n    if (!formData.name.trim() && !formData.email.trim() && !formData.password.trim()) {\n      return;\n    }\n    onSave(formData);\n\n    // Clear form only if adding (not updating)\n    if (!selectedCustomer) {\n      setFormData({\n        name: '',\n        email: '',\n        password: ''\n      });\n    }\n  };\n  const handleDelete = () => {\n    if (selectedCustomer) {\n      onDelete(selectedCustomer.id);\n    }\n  };\n  const handleCancel = () => {\n    onCancel();\n    // Form will be cleared by useEffect when selectedCustomer becomes null\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"customer-form-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: selectedCustomer ? 'Update' : 'Add'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: formData.name,\n        onChange: handleInputChange,\n        placeholder: \"Customer Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: formData.email,\n        onChange: handleInputChange,\n        placeholder: \"name@company.com\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), emailError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: emailError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Pass:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: formData.password,\n        onChange: handleInputChange,\n        placeholder: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDelete,\n        disabled: !selectedCustomer,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n_s(CustomerForm, \"t7uE39UH/11bQ0K8mRq4d6fojmA=\");\n_c = CustomerForm;\nexport default CustomerForm;\nvar _c;\n$RefreshReg$(_c, \"CustomerForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CustomerForm","selectedCustomer","onSave","onDelete","onCancel","_s","formData","setFormData","name","email","password","emailError","setEmailError","handleInputChange","e","value","target","prev","test","handleSave","trim","handleDelete","id","handleCancel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/n0096336/Downloads/FullStack/capstone2/customer-management-app/src/components/CustomerForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst CustomerForm = ({ selectedCustomer, onSave, onDelete, onCancel }) => {\n    const [formData, setFormData] = useState({\n        name: '',\n        email: '',\n        password: ''\n    });\n    const [emailError, setEmailError] = useState('');\n\n    // Update form when a customer is selected or deselected\n    useEffect(() => {\n        if (selectedCustomer) {\n            setFormData({\n                name: selectedCustomer.name,\n                email: selectedCustomer.email,\n                password: selectedCustomer.password\n            });\n        } else {\n            setFormData({\n                name: '',\n                email: '',\n                password: ''\n            });\n        }\n    }, [selectedCustomer]);\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setFormData(prev => ({\n            ...prev,\n            [name]: value\n        }));\n\n        if (name === 'email') {\n            if (!value) {\n                setEmailError('Email is required.');\n            } else if (!/\\S+@\\S+\\.\\S+/.test(value)) {\n                setEmailError('Please enter a valid email address.');\n            } else {\n                setEmailError('');\n            }\n        }\n    };\n\n    const handleSave = () => {\n        // Validate email before saving\n        if (!formData.email) {\n            setEmailError('Email is required.');\n            return;\n        } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n            setEmailError('Please enter a valid email address.');\n            return;\n        } else {\n            setEmailError('');\n        }\n\n        // Don't save if all fields are empty\n        if (!formData.name.trim() && !formData.email.trim() && !formData.password.trim()) {\n            return;\n        }\n        \n        onSave(formData);\n        \n        // Clear form only if adding (not updating)\n        if (!selectedCustomer) {\n            setFormData({\n                name: '',\n                email: '',\n                password: ''\n            });\n        }\n    };\n\n    const handleDelete = () => {\n        if (selectedCustomer) {\n            onDelete(selectedCustomer.id);\n        }\n    };\n\n    const handleCancel = () => {\n        onCancel();\n        // Form will be cleared by useEffect when selectedCustomer becomes null\n    };\n\n    return (\n        <div className=\"customer-form-section\">\n            <h2>{selectedCustomer ? 'Update' : 'Add'}</h2>\n            <div className=\"form-group\">\n                <label>Name:</label>\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    value={formData.name}\n                    onChange={handleInputChange}\n                    placeholder=\"Customer Name\"\n                />\n            </div>\n            <div className=\"form-group\">\n                <label>Email:</label>\n                <input\n                    type=\"email\"\n                    name=\"email\"\n                    value={formData.email}\n                    onChange={handleInputChange}\n                    placeholder=\"name@company.com\"\n                />\n            </div>\n            {emailError && <p className=\"error-message\">{emailError}</p>}\n            <div className=\"form-group\">\n                <label>Pass:</label>\n                <input\n                    type=\"password\"\n                    name=\"password\"\n                    value={formData.password}\n                    onChange={handleInputChange}\n                    placeholder=\"password\"\n                />\n            </div>\n            <div className=\"button-group\">\n                <button onClick={handleDelete} disabled={!selectedCustomer}>\n                    Delete\n                </button>\n                <button onClick={handleSave}>\n                    Save\n                </button>\n                <button onClick={handleCancel}>\n                    Cancel\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default CustomerForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,YAAY,GAAGA,CAAC;EAAEC,gBAAgB;EAAEC,MAAM;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACvE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC;IACrCY,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACd,CAAC,CAAC;EACF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACAC,SAAS,CAAC,MAAM;IACZ,IAAII,gBAAgB,EAAE;MAClBM,WAAW,CAAC;QACRC,IAAI,EAAEP,gBAAgB,CAACO,IAAI;QAC3BC,KAAK,EAAER,gBAAgB,CAACQ,KAAK;QAC7BC,QAAQ,EAAET,gBAAgB,CAACS;MAC/B,CAAC,CAAC;IACN,CAAC,MAAM;MACHH,WAAW,CAAC;QACRC,IAAI,EAAE,EAAE;QACRC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE;MACd,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,CAACT,gBAAgB,CAAC,CAAC;EAEtB,MAAMY,iBAAiB,GAAIC,CAAC,IAAK;IAC7B,MAAM;MAAEN,IAAI;MAAEO;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAChCT,WAAW,CAACU,IAAI,KAAK;MACjB,GAAGA,IAAI;MACP,CAACT,IAAI,GAAGO;IACZ,CAAC,CAAC,CAAC;IAEH,IAAIP,IAAI,KAAK,OAAO,EAAE;MAClB,IAAI,CAACO,KAAK,EAAE;QACRH,aAAa,CAAC,oBAAoB,CAAC;MACvC,CAAC,MAAM,IAAI,CAAC,cAAc,CAACM,IAAI,CAACH,KAAK,CAAC,EAAE;QACpCH,aAAa,CAAC,qCAAqC,CAAC;MACxD,CAAC,MAAM;QACHA,aAAa,CAAC,EAAE,CAAC;MACrB;IACJ;EACJ,CAAC;EAED,MAAMO,UAAU,GAAGA,CAAA,KAAM;IACrB;IACA,IAAI,CAACb,QAAQ,CAACG,KAAK,EAAE;MACjBG,aAAa,CAAC,oBAAoB,CAAC;MACnC;IACJ,CAAC,MAAM,IAAI,CAAC,cAAc,CAACM,IAAI,CAACZ,QAAQ,CAACG,KAAK,CAAC,EAAE;MAC7CG,aAAa,CAAC,qCAAqC,CAAC;MACpD;IACJ,CAAC,MAAM;MACHA,aAAa,CAAC,EAAE,CAAC;IACrB;;IAEA;IACA,IAAI,CAACN,QAAQ,CAACE,IAAI,CAACY,IAAI,CAAC,CAAC,IAAI,CAACd,QAAQ,CAACG,KAAK,CAACW,IAAI,CAAC,CAAC,IAAI,CAACd,QAAQ,CAACI,QAAQ,CAACU,IAAI,CAAC,CAAC,EAAE;MAC9E;IACJ;IAEAlB,MAAM,CAACI,QAAQ,CAAC;;IAEhB;IACA,IAAI,CAACL,gBAAgB,EAAE;MACnBM,WAAW,CAAC;QACRC,IAAI,EAAE,EAAE;QACRC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE;MACd,CAAC,CAAC;IACN;EACJ,CAAC;EAED,MAAMW,YAAY,GAAGA,CAAA,KAAM;IACvB,IAAIpB,gBAAgB,EAAE;MAClBE,QAAQ,CAACF,gBAAgB,CAACqB,EAAE,CAAC;IACjC;EACJ,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACvBnB,QAAQ,CAAC,CAAC;IACV;EACJ,CAAC;EAED,oBACIL,OAAA;IAAKyB,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBAClC1B,OAAA;MAAA0B,QAAA,EAAKxB,gBAAgB,GAAG,QAAQ,GAAG;IAAK;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC9C9B,OAAA;MAAKyB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACvB1B,OAAA;QAAA0B,QAAA,EAAO;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpB9B,OAAA;QACI+B,IAAI,EAAC,MAAM;QACXtB,IAAI,EAAC,MAAM;QACXO,KAAK,EAAET,QAAQ,CAACE,IAAK;QACrBuB,QAAQ,EAAElB,iBAAkB;QAC5BmB,WAAW,EAAC;MAAe;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACN9B,OAAA;MAAKyB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACvB1B,OAAA;QAAA0B,QAAA,EAAO;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrB9B,OAAA;QACI+B,IAAI,EAAC,OAAO;QACZtB,IAAI,EAAC,OAAO;QACZO,KAAK,EAAET,QAAQ,CAACG,KAAM;QACtBsB,QAAQ,EAAElB,iBAAkB;QAC5BmB,WAAW,EAAC;MAAkB;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,EACLlB,UAAU,iBAAIZ,OAAA;MAAGyB,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAEd;IAAU;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5D9B,OAAA;MAAKyB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACvB1B,OAAA;QAAA0B,QAAA,EAAO;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpB9B,OAAA;QACI+B,IAAI,EAAC,UAAU;QACftB,IAAI,EAAC,UAAU;QACfO,KAAK,EAAET,QAAQ,CAACI,QAAS;QACzBqB,QAAQ,EAAElB,iBAAkB;QAC5BmB,WAAW,EAAC;MAAU;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACN9B,OAAA;MAAKyB,SAAS,EAAC,cAAc;MAAAC,QAAA,gBACzB1B,OAAA;QAAQkC,OAAO,EAAEZ,YAAa;QAACa,QAAQ,EAAE,CAACjC,gBAAiB;QAAAwB,QAAA,EAAC;MAE5D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT9B,OAAA;QAAQkC,OAAO,EAAEd,UAAW;QAAAM,QAAA,EAAC;MAE7B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT9B,OAAA;QAAQkC,OAAO,EAAEV,YAAa;QAAAE,QAAA,EAAC;MAE/B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACxB,EAAA,CAlIIL,YAAY;AAAAmC,EAAA,GAAZnC,YAAY;AAoIlB,eAAeA,YAAY;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}