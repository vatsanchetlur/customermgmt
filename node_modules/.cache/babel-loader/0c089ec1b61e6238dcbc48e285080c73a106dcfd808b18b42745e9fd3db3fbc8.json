{"ast":null,"code":"// Simple in-memory storage for demo purposes\nlet customers = [{\n  id: 1,\n  name: 'Mike Johnson',\n  email: 'mikej@abc.com',\n  password: 'mikej'\n}, {\n  id: 2,\n  name: 'Cindy Smith',\n  email: 'cinds@abc.com',\n  password: 'cinds'\n}, {\n  id: 3,\n  name: 'Julio Martin',\n  email: 'julim@abc.com',\n  password: 'julim'\n}];\nlet nextId = 4;\nexport const getCustomers = async () => {\n  return Promise.resolve([...customers]);\n};\nexport const addCustomer = async customer => {\n  const newCustomer = {\n    ...customer,\n    id: nextId++\n  };\n  customers.push(newCustomer);\n  return Promise.resolve(newCustomer);\n};\nexport const updateCustomer = async (id, updatedData) => {\n  const index = customers.findIndex(c => c.id === id);\n  if (index !== -1) {\n    customers[index] = {\n      ...customers[index],\n      ...updatedData\n    };\n    return Promise.resolve(customers[index]);\n  }\n  return Promise.reject(new Error('Customer not found'));\n};\nexport const deleteCustomer = async id => {\n  customers = customers.filter(c => c.id !== id);\n  return Promise.resolve();\n};","map":{"version":3,"names":["customers","id","name","email","password","nextId","getCustomers","Promise","resolve","addCustomer","customer","newCustomer","push","updateCustomer","updatedData","index","findIndex","c","reject","Error","deleteCustomer","filter"],"sources":["/Users/n0096336/Downloads/FullStack/capstone2/customer-management-app/src/services/customerService.js"],"sourcesContent":["// Simple in-memory storage for demo purposes\nlet customers = [\n    { id: 1, name: 'Mike Johnson', email: 'mikej@abc.com', password: 'mikej' },\n    { id: 2, name: 'Cindy Smith', email: 'cinds@abc.com', password: 'cinds' },\n    { id: 3, name: 'Julio Martin', email: 'julim@abc.com', password: 'julim' }\n];\n\nlet nextId = 4;\n\nexport const getCustomers = async () => {\n    return Promise.resolve([...customers]);\n};\n\nexport const addCustomer = async (customer) => {\n    const newCustomer = {\n        ...customer,\n        id: nextId++\n    };\n    customers.push(newCustomer);\n    return Promise.resolve(newCustomer);\n};\n\nexport const updateCustomer = async (id, updatedData) => {\n    const index = customers.findIndex(c => c.id === id);\n    if (index !== -1) {\n        customers[index] = { ...customers[index], ...updatedData };\n        return Promise.resolve(customers[index]);\n    }\n    return Promise.reject(new Error('Customer not found'));\n};\n\nexport const deleteCustomer = async (id) => {\n    customers = customers.filter(c => c.id !== id);\n    return Promise.resolve();\n};"],"mappings":"AAAA;AACA,IAAIA,SAAS,GAAG,CACZ;EAAEC,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,cAAc;EAAEC,KAAK,EAAE,eAAe;EAAEC,QAAQ,EAAE;AAAQ,CAAC,EAC1E;EAAEH,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,aAAa;EAAEC,KAAK,EAAE,eAAe;EAAEC,QAAQ,EAAE;AAAQ,CAAC,EACzE;EAAEH,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,cAAc;EAAEC,KAAK,EAAE,eAAe;EAAEC,QAAQ,EAAE;AAAQ,CAAC,CAC7E;AAED,IAAIC,MAAM,GAAG,CAAC;AAEd,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;EACpC,OAAOC,OAAO,CAACC,OAAO,CAAC,CAAC,GAAGR,SAAS,CAAC,CAAC;AAC1C,CAAC;AAED,OAAO,MAAMS,WAAW,GAAG,MAAOC,QAAQ,IAAK;EAC3C,MAAMC,WAAW,GAAG;IAChB,GAAGD,QAAQ;IACXT,EAAE,EAAEI,MAAM;EACd,CAAC;EACDL,SAAS,CAACY,IAAI,CAACD,WAAW,CAAC;EAC3B,OAAOJ,OAAO,CAACC,OAAO,CAACG,WAAW,CAAC;AACvC,CAAC;AAED,OAAO,MAAME,cAAc,GAAG,MAAAA,CAAOZ,EAAE,EAAEa,WAAW,KAAK;EACrD,MAAMC,KAAK,GAAGf,SAAS,CAACgB,SAAS,CAACC,CAAC,IAAIA,CAAC,CAAChB,EAAE,KAAKA,EAAE,CAAC;EACnD,IAAIc,KAAK,KAAK,CAAC,CAAC,EAAE;IACdf,SAAS,CAACe,KAAK,CAAC,GAAG;MAAE,GAAGf,SAAS,CAACe,KAAK,CAAC;MAAE,GAAGD;IAAY,CAAC;IAC1D,OAAOP,OAAO,CAACC,OAAO,CAACR,SAAS,CAACe,KAAK,CAAC,CAAC;EAC5C;EACA,OAAOR,OAAO,CAACW,MAAM,CAAC,IAAIC,KAAK,CAAC,oBAAoB,CAAC,CAAC;AAC1D,CAAC;AAED,OAAO,MAAMC,cAAc,GAAG,MAAOnB,EAAE,IAAK;EACxCD,SAAS,GAAGA,SAAS,CAACqB,MAAM,CAACJ,CAAC,IAAIA,CAAC,CAAChB,EAAE,KAAKA,EAAE,CAAC;EAC9C,OAAOM,OAAO,CAACC,OAAO,CAAC,CAAC;AAC5B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}