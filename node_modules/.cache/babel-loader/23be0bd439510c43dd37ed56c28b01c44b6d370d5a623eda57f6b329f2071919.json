{"ast":null,"code":"var _jsxFileName = \"/Users/n0096336/Downloads/FullStack/capstone2/customer-management-app/src/components/App.js\",\n  _s = $RefreshSig$();\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport React, { useState, useEffect } from 'react';\nimport CustomerForm from './CustomerForm';\nimport CustomerList from './CustomerList';\nimport { getCustomers, addCustomer, updateCustomer, deleteCustomer } from '../services/customerService';\nimport '../styles/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [customers, setCustomers] = useState([]);\n  const [selectedCustomer, setSelectedCustomer] = useState(null);\n  useEffect(() => {\n    const fetchCustomers = async () => {\n      const data = await getCustomers();\n      setCustomers(data);\n    };\n    fetchCustomers();\n  }, []);\n  const handleAddCustomer = async customer => {\n    const newCustomer = await addCustomer(customer);\n    setCustomers([...customers, newCustomer]);\n  };\n  const handleUpdateCustomer = async customer => {\n    // Use the customer's id to update the correct customer\n    const updatedCustomer = await updateCustomer(customer.id, customer);\n    setCustomers(customers.map(c => c.id === customer.id ? updatedCustomer : c));\n    setSelectedCustomer(null);\n  };\n  const handleDeleteCustomer = async id => {\n    await deleteCustomer(id);\n    setCustomers(customers.filter(c => c.id !== id));\n    setSelectedCustomer(null);\n  };\n  const handleSelectCustomer = customer => {\n    // Toggle selection when clicking on already selected customer\n    if (selectedCustomer && selectedCustomer.id === customer.id) {\n      setSelectedCustomer(null);\n    } else {\n      setSelectedCustomer(customer);\n    }\n  };\n  const handleCancel = () => {\n    setSelectedCustomer(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Customer Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(CustomerList, {\n        customers: customers,\n        onSelect: handleSelectCustomer,\n        selectedCustomer: selectedCustomer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CustomerForm, {\n        selectedCustomer: selectedCustomer,\n        onSave: customer => {\n          if (selectedCustomer) {\n            handleUpdateCustomer({\n              ...selectedCustomer,\n              ...customer\n            });\n          } else {\n            handleAddCustomer(customer);\n          }\n        },\n        onDelete: handleDeleteCustomer,\n        onCancel: handleCancel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"iuYQM58gApHDim8qoOzjTr2rVQo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Router","Routes","Route","React","useState","useEffect","CustomerForm","CustomerList","getCustomers","addCustomer","updateCustomer","deleteCustomer","jsxDEV","_jsxDEV","App","_s","customers","setCustomers","selectedCustomer","setSelectedCustomer","fetchCustomers","data","handleAddCustomer","customer","newCustomer","handleUpdateCustomer","updatedCustomer","id","map","c","handleDeleteCustomer","filter","handleSelectCustomer","handleCancel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelect","onSave","onDelete","onCancel","_c","$RefreshReg$"],"sources":["/Users/n0096336/Downloads/FullStack/capstone2/customer-management-app/src/components/App.js"],"sourcesContent":["import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nimport React, { useState, useEffect } from 'react';\nimport CustomerForm from './CustomerForm';\nimport CustomerList from './CustomerList';\nimport { getCustomers, addCustomer, updateCustomer, deleteCustomer } from '../services/customerService';\nimport '../styles/styles.css';\nconst App = () => {\n    const [customers, setCustomers] = useState([]);\n    const [selectedCustomer, setSelectedCustomer] = useState(null);\n\n    useEffect(() => {\n        const fetchCustomers = async () => {\n            const data = await getCustomers();\n            setCustomers(data);\n        };\n        fetchCustomers();\n    }, []);\n\n    const handleAddCustomer = async (customer) => {\n        const newCustomer = await addCustomer(customer);\n        setCustomers([...customers, newCustomer]);\n    };\n\n    const handleUpdateCustomer = async (customer) => {\n        // Use the customer's id to update the correct customer\n        const updatedCustomer = await updateCustomer(customer.id, customer);\n        setCustomers(customers.map(c => (c.id === customer.id ? updatedCustomer : c)));\n        setSelectedCustomer(null);\n    };\n\n    const handleDeleteCustomer = async (id) => {\n        await deleteCustomer(id);\n        setCustomers(customers.filter(c => c.id !== id));\n        setSelectedCustomer(null);\n    };\n\n    const handleSelectCustomer = (customer) => {\n        // Toggle selection when clicking on already selected customer\n        if (selectedCustomer && selectedCustomer.id === customer.id) {\n            setSelectedCustomer(null);\n        } else {\n            setSelectedCustomer(customer);\n        }\n    };\n\n    const handleCancel = () => {\n        setSelectedCustomer(null);\n    };\n\n    return (\n        <div className=\"app\">\n            <h1>Customer Management</h1>\n            <div className=\"container\">\n                <CustomerList \n                    customers={customers} \n                    onSelect={handleSelectCustomer} \n                    selectedCustomer={selectedCustomer} \n                />\n                <CustomerForm \n                    selectedCustomer={selectedCustomer} \n                    onSave={(customer) => {\n                        if (selectedCustomer) {\n                            handleUpdateCustomer({...selectedCustomer, ...customer});\n                        } else {\n                            handleAddCustomer(customer);\n                        }\n                    }}\n                    onDelete={handleDeleteCustomer} \n                    onCancel={handleCancel} \n                />\n            </div>\n        </div>\n    );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}