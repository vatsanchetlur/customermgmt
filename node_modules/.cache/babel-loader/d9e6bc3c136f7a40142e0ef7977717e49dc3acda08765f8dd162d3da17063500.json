{"ast":null,"code":"import _objectSpread from\"/Users/n0096336/Downloads/FullStack/capstone2/customer-management-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{BrowserRouter as Router,Routes,Route}from\"react-router-dom\";import CustomerForm from\"./CustomerForm\";import CustomerList from\"./CustomerList\";import{getCustomers,addCustomer,updateCustomer,deleteCustomer}from'../services/customerService';import'../styles/styles.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[customers,setCustomers]=useState([]);const[selectedCustomer,setSelectedCustomer]=useState(null);useEffect(()=>{const fetchCustomers=async()=>{const data=await getCustomers();setCustomers(data);};fetchCustomers();},[]);const handleAddCustomer=async customer=>{const newCustomer=await addCustomer(customer);setCustomers([...customers,newCustomer]);};const handleUpdateCustomer=async customer=>{const updatedCustomer=await updateCustomer(customer.id,customer);setCustomers(customers.map(c=>c.id===customer.id?updatedCustomer:c));setSelectedCustomer(null);};const handleDeleteCustomer=async id=>{await deleteCustomer(id);setCustomers(customers.filter(c=>c.id!==id));setSelectedCustomer(null);};const handleSelectCustomer=customer=>{if(selectedCustomer&&selectedCustomer.id===customer.id){setSelectedCustomer(null);}else{setSelectedCustomer(customer);}};const handleCancel=()=>{setSelectedCustomer(null);};// ---- Routing Setup ----\nreturn/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Customer Management\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(CustomerList,{customers:customers,onSelect:handleSelectCustomer,selectedCustomer:selectedCustomer}),/*#__PURE__*/_jsx(CustomerForm,{selectedCustomer:selectedCustomer,onSave:customer=>{if(selectedCustomer){handleUpdateCustomer(_objectSpread(_objectSpread({},selectedCustomer),customer));}else{handleAddCustomer(customer);}},onDelete:handleDeleteCustomer,onCancel:handleCancel})]})]})}),/*#__PURE__*/_jsx(Route,{path:\"/customerform\",element:/*#__PURE__*/_jsx(CustomerForm,{selectedCustomer:selectedCustomer,onSave:customer=>{if(selectedCustomer){handleUpdateCustomer(_objectSpread(_objectSpread({},selectedCustomer),customer));}else{handleAddCustomer(customer);}},onDelete:handleDeleteCustomer,onCancel:handleCancel})}),/*#__PURE__*/_jsx(Route,{path:\"/customerlist\",element:/*#__PURE__*/_jsx(CustomerList,{customers:customers,onSelect:handleSelectCustomer,selectedCustomer:selectedCustomer})})]})});};export default App;","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","CustomerForm","CustomerList","getCustomers","addCustomer","updateCustomer","deleteCustomer","jsx","_jsx","jsxs","_jsxs","App","customers","setCustomers","selectedCustomer","setSelectedCustomer","fetchCustomers","data","handleAddCustomer","customer","newCustomer","handleUpdateCustomer","updatedCustomer","id","map","c","handleDeleteCustomer","filter","handleSelectCustomer","handleCancel","children","path","element","className","onSelect","onSave","_objectSpread","onDelete","onCancel"],"sources":["/Users/n0096336/Downloads/FullStack/capstone2/customer-management-app/src/components/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport CustomerForm from \"./CustomerForm\";\nimport CustomerList from \"./CustomerList\";\nimport { getCustomers, addCustomer, updateCustomer, deleteCustomer } from '../services/customerService';\nimport '../styles/styles.css';\n\nconst App = () => {\n    const [customers, setCustomers] = useState([]);\n    const [selectedCustomer, setSelectedCustomer] = useState(null);\n\n    useEffect(() => {\n        const fetchCustomers = async () => {\n            const data = await getCustomers();\n            setCustomers(data);\n        };\n        fetchCustomers();\n    }, []);\n\n    const handleAddCustomer = async (customer) => {\n        const newCustomer = await addCustomer(customer);\n        setCustomers([...customers, newCustomer]);\n    };\n\n    const handleUpdateCustomer = async (customer) => {\n        const updatedCustomer = await updateCustomer(customer.id, customer);\n        setCustomers(customers.map(c => (c.id === customer.id ? updatedCustomer : c)));\n        setSelectedCustomer(null);\n    };\n\n    const handleDeleteCustomer = async (id) => {\n        await deleteCustomer(id);\n        setCustomers(customers.filter(c => c.id !== id));\n        setSelectedCustomer(null);\n    };\n\n    const handleSelectCustomer = (customer) => {\n        if (selectedCustomer && selectedCustomer.id === customer.id) {\n            setSelectedCustomer(null);\n        } else {\n            setSelectedCustomer(customer);\n        }\n    };\n\n    const handleCancel = () => {\n        setSelectedCustomer(null);\n    };\n\n    // ---- Routing Setup ----\n    return (\n        <Router>\n            <Routes>\n                {/* Main App */}\n                <Route path=\"/\" element={\n                    <div className=\"app\">\n                        <h1>Customer Management</h1>\n                        <div className=\"container\">\n                            <CustomerList\n                                customers={customers}\n                                onSelect={handleSelectCustomer}\n                                selectedCustomer={selectedCustomer}\n                            />\n                            <CustomerForm\n                                selectedCustomer={selectedCustomer}\n                                onSave={(customer) => {\n                                    if (selectedCustomer) {\n                                        handleUpdateCustomer({ ...selectedCustomer, ...customer });\n                                    } else {\n                                        handleAddCustomer(customer);\n                                    }\n                                }}\n                                onDelete={handleDeleteCustomer}\n                                onCancel={handleCancel}\n                            />\n                        </div>\n                    </div>\n                } />\n                {/* Just CustomerForm */}\n                <Route path=\"/customerform\" element={\n                    <CustomerForm\n                        selectedCustomer={selectedCustomer}\n                        onSave={(customer) => {\n                            if (selectedCustomer) {\n                                handleUpdateCustomer({ ...selectedCustomer, ...customer });\n                            } else {\n                                handleAddCustomer(customer);\n                            }\n                        }}\n                        onDelete={handleDeleteCustomer}\n                        onCancel={handleCancel}\n                    />\n                } />\n                {/* Just CustomerList */}\n                <Route path=\"/customerlist\" element={\n                    <CustomerList\n                        customers={customers}\n                        onSelect={handleSelectCustomer}\n                        selectedCustomer={selectedCustomer}\n                    />\n                } />\n            </Routes>\n        </Router>\n    );\n};\n\nexport default App;\n"],"mappings":"0JAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,aAAa,GAAI,CAAAC,MAAM,CAAEC,MAAM,CAAEC,KAAK,KAAQ,kBAAkB,CACzE,MAAO,CAAAC,YAAY,KAAM,gBAAgB,CACzC,MAAO,CAAAC,YAAY,KAAM,gBAAgB,CACzC,OAASC,YAAY,CAAEC,WAAW,CAAEC,cAAc,CAAEC,cAAc,KAAQ,6BAA6B,CACvG,MAAO,sBAAsB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE9B,KAAM,CAAAC,GAAG,CAAGA,CAAA,GAAM,CACd,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGlB,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAACmB,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGpB,QAAQ,CAAC,IAAI,CAAC,CAE9DC,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAoB,cAAc,CAAG,KAAAA,CAAA,GAAY,CAC/B,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAd,YAAY,CAAC,CAAC,CACjCU,YAAY,CAACI,IAAI,CAAC,CACtB,CAAC,CACDD,cAAc,CAAC,CAAC,CACpB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAE,iBAAiB,CAAG,KAAO,CAAAC,QAAQ,EAAK,CAC1C,KAAM,CAAAC,WAAW,CAAG,KAAM,CAAAhB,WAAW,CAACe,QAAQ,CAAC,CAC/CN,YAAY,CAAC,CAAC,GAAGD,SAAS,CAAEQ,WAAW,CAAC,CAAC,CAC7C,CAAC,CAED,KAAM,CAAAC,oBAAoB,CAAG,KAAO,CAAAF,QAAQ,EAAK,CAC7C,KAAM,CAAAG,eAAe,CAAG,KAAM,CAAAjB,cAAc,CAACc,QAAQ,CAACI,EAAE,CAAEJ,QAAQ,CAAC,CACnEN,YAAY,CAACD,SAAS,CAACY,GAAG,CAACC,CAAC,EAAKA,CAAC,CAACF,EAAE,GAAKJ,QAAQ,CAACI,EAAE,CAAGD,eAAe,CAAGG,CAAE,CAAC,CAAC,CAC9EV,mBAAmB,CAAC,IAAI,CAAC,CAC7B,CAAC,CAED,KAAM,CAAAW,oBAAoB,CAAG,KAAO,CAAAH,EAAE,EAAK,CACvC,KAAM,CAAAjB,cAAc,CAACiB,EAAE,CAAC,CACxBV,YAAY,CAACD,SAAS,CAACe,MAAM,CAACF,CAAC,EAAIA,CAAC,CAACF,EAAE,GAAKA,EAAE,CAAC,CAAC,CAChDR,mBAAmB,CAAC,IAAI,CAAC,CAC7B,CAAC,CAED,KAAM,CAAAa,oBAAoB,CAAIT,QAAQ,EAAK,CACvC,GAAIL,gBAAgB,EAAIA,gBAAgB,CAACS,EAAE,GAAKJ,QAAQ,CAACI,EAAE,CAAE,CACzDR,mBAAmB,CAAC,IAAI,CAAC,CAC7B,CAAC,IAAM,CACHA,mBAAmB,CAACI,QAAQ,CAAC,CACjC,CACJ,CAAC,CAED,KAAM,CAAAU,YAAY,CAAGA,CAAA,GAAM,CACvBd,mBAAmB,CAAC,IAAI,CAAC,CAC7B,CAAC,CAED;AACA,mBACIP,IAAA,CAACV,MAAM,EAAAgC,QAAA,cACHpB,KAAA,CAACX,MAAM,EAAA+B,QAAA,eAEHtB,IAAA,CAACR,KAAK,EAAC+B,IAAI,CAAC,GAAG,CAACC,OAAO,cACnBtB,KAAA,QAAKuB,SAAS,CAAC,KAAK,CAAAH,QAAA,eAChBtB,IAAA,OAAAsB,QAAA,CAAI,qBAAmB,CAAI,CAAC,cAC5BpB,KAAA,QAAKuB,SAAS,CAAC,WAAW,CAAAH,QAAA,eACtBtB,IAAA,CAACN,YAAY,EACTU,SAAS,CAAEA,SAAU,CACrBsB,QAAQ,CAAEN,oBAAqB,CAC/Bd,gBAAgB,CAAEA,gBAAiB,CACtC,CAAC,cACFN,IAAA,CAACP,YAAY,EACTa,gBAAgB,CAAEA,gBAAiB,CACnCqB,MAAM,CAAGhB,QAAQ,EAAK,CAClB,GAAIL,gBAAgB,CAAE,CAClBO,oBAAoB,CAAAe,aAAA,CAAAA,aAAA,IAAMtB,gBAAgB,EAAKK,QAAQ,CAAE,CAAC,CAC9D,CAAC,IAAM,CACHD,iBAAiB,CAACC,QAAQ,CAAC,CAC/B,CACJ,CAAE,CACFkB,QAAQ,CAAEX,oBAAqB,CAC/BY,QAAQ,CAAET,YAAa,CAC1B,CAAC,EACD,CAAC,EACL,CACR,CAAE,CAAC,cAEJrB,IAAA,CAACR,KAAK,EAAC+B,IAAI,CAAC,eAAe,CAACC,OAAO,cAC/BxB,IAAA,CAACP,YAAY,EACTa,gBAAgB,CAAEA,gBAAiB,CACnCqB,MAAM,CAAGhB,QAAQ,EAAK,CAClB,GAAIL,gBAAgB,CAAE,CAClBO,oBAAoB,CAAAe,aAAA,CAAAA,aAAA,IAAMtB,gBAAgB,EAAKK,QAAQ,CAAE,CAAC,CAC9D,CAAC,IAAM,CACHD,iBAAiB,CAACC,QAAQ,CAAC,CAC/B,CACJ,CAAE,CACFkB,QAAQ,CAAEX,oBAAqB,CAC/BY,QAAQ,CAAET,YAAa,CAC1B,CACJ,CAAE,CAAC,cAEJrB,IAAA,CAACR,KAAK,EAAC+B,IAAI,CAAC,eAAe,CAACC,OAAO,cAC/BxB,IAAA,CAACN,YAAY,EACTU,SAAS,CAAEA,SAAU,CACrBsB,QAAQ,CAAEN,oBAAqB,CAC/Bd,gBAAgB,CAAEA,gBAAiB,CACtC,CACJ,CAAE,CAAC,EACA,CAAC,CACL,CAAC,CAEjB,CAAC,CAED,cAAe,CAAAH,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}