{"ast":null,"code":"import _objectSpread from\"/Users/n0096336/Downloads/FullStack/capstone2/customer-management-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CustomerForm=_ref=>{let{selectedCustomer,onSave,onDelete,onCancel}=_ref;const[formData,setFormData]=useState({name:'',email:'',password:''});const[emailError,setEmailError]=useState('');// Update form when a customer is selected or deselected\nuseEffect(()=>{if(selectedCustomer){setFormData({name:selectedCustomer.name,email:selectedCustomer.email,password:selectedCustomer.password});}else{setFormData({name:'',email:'',password:''});}},[selectedCustomer]);const handleInputChange=e=>{const{name,value}=e.target;setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{[name]:value}));if(name==='email'){if(!value){setEmailError('Email is required.');}else if(!/\\S+@\\S+\\.\\S+/.test(value)){setEmailError('Please enter a valid email address.');}else{setEmailError('');}}};const handleSave=()=>{// Validate email before saving\nif(!formData.email){setEmailError('Email is required.');return;}else if(!/\\S+@\\S+\\.\\S+/.test(formData.email)){setEmailError('Please enter a valid email address.');return;}else{setEmailError('');}// Don't save if all fields are empty\nif(!formData.name.trim()&&!formData.email.trim()&&!formData.password.trim()){return;}onSave(formData);// Clear form only if adding (not updating)\nif(!selectedCustomer){setFormData({name:'',email:'',password:''});}};const handleDelete=()=>{if(selectedCustomer){onDelete(selectedCustomer.id);}};const handleCancel=()=>{onCancel();// Form will be cleared by useEffect when selectedCustomer becomes null\n};return/*#__PURE__*/_jsxs(\"div\",{className:\"customer-form-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:selectedCustomer?'Update':'Add'}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Name:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"name\",value:formData.name,onChange:handleInputChange,placeholder:\"Customer Name\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Email:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",value:formData.email,onChange:handleInputChange,placeholder:\"name@company.com\"})]}),emailError&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:emailError}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Pass:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",value:formData.password,onChange:handleInputChange,placeholder:\"password\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"button-group\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleDelete,disabled:!selectedCustomer,children:\"Delete\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSave,children:\"Save\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleCancel,children:\"Cancel\"})]})]});};export default CustomerForm;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","CustomerForm","_ref","selectedCustomer","onSave","onDelete","onCancel","formData","setFormData","name","email","password","emailError","setEmailError","handleInputChange","e","value","target","prev","_objectSpread","test","handleSave","trim","handleDelete","id","handleCancel","className","children","type","onChange","placeholder","onClick","disabled"],"sources":["/Users/n0096336/Downloads/FullStack/capstone2/customer-management-app/src/components/CustomerForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst CustomerForm = ({ selectedCustomer, onSave, onDelete, onCancel }) => {\n    const [formData, setFormData] = useState({\n        name: '',\n        email: '',\n        password: ''\n    });\n    const [emailError, setEmailError] = useState('');\n\n    // Update form when a customer is selected or deselected\n    useEffect(() => {\n        if (selectedCustomer) {\n            setFormData({\n                name: selectedCustomer.name,\n                email: selectedCustomer.email,\n                password: selectedCustomer.password\n            });\n        } else {\n            setFormData({\n                name: '',\n                email: '',\n                password: ''\n            });\n        }\n    }, [selectedCustomer]);\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setFormData(prev => ({\n            ...prev,\n            [name]: value\n        }));\n\n        if (name === 'email') {\n            if (!value) {\n                setEmailError('Email is required.');\n            } else if (!/\\S+@\\S+\\.\\S+/.test(value)) {\n                setEmailError('Please enter a valid email address.');\n            } else {\n                setEmailError('');\n            }\n        }\n    };\n\n    const handleSave = () => {\n        // Validate email before saving\n        if (!formData.email) {\n            setEmailError('Email is required.');\n            return;\n        } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n            setEmailError('Please enter a valid email address.');\n            return;\n        } else {\n            setEmailError('');\n        }\n\n        // Don't save if all fields are empty\n        if (!formData.name.trim() && !formData.email.trim() && !formData.password.trim()) {\n            return;\n        }\n        \n        onSave(formData);\n        \n        // Clear form only if adding (not updating)\n        if (!selectedCustomer) {\n            setFormData({\n                name: '',\n                email: '',\n                password: ''\n            });\n        }\n    };\n\n    const handleDelete = () => {\n        if (selectedCustomer) {\n            onDelete(selectedCustomer.id);\n        }\n    };\n\n    const handleCancel = () => {\n        onCancel();\n        // Form will be cleared by useEffect when selectedCustomer becomes null\n    };\n\n    return (\n        <div className=\"customer-form-section\">\n            <h2>{selectedCustomer ? 'Update' : 'Add'}</h2>\n            <div className=\"form-group\">\n                <label>Name:</label>\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    value={formData.name}\n                    onChange={handleInputChange}\n                    placeholder=\"Customer Name\"\n                />\n            </div>\n            <div className=\"form-group\">\n                <label>Email:</label>\n                <input\n                    type=\"email\"\n                    name=\"email\"\n                    value={formData.email}\n                    onChange={handleInputChange}\n                    placeholder=\"name@company.com\"\n                />\n            </div>\n            {emailError && <p className=\"error-message\">{emailError}</p>}\n            <div className=\"form-group\">\n                <label>Pass:</label>\n                <input\n                    type=\"password\"\n                    name=\"password\"\n                    value={formData.password}\n                    onChange={handleInputChange}\n                    placeholder=\"password\"\n                />\n            </div>\n            <div className=\"button-group\">\n                <button onClick={handleDelete} disabled={!selectedCustomer}>\n                    Delete\n                </button>\n                <button onClick={handleSave}>\n                    Save\n                </button>\n                <button onClick={handleCancel}>\n                    Cancel\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default CustomerForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}