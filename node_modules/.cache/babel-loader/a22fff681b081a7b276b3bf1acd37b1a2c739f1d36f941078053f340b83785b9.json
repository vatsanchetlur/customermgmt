{"ast":null,"code":"var _jsxFileName = \"/Users/n0096336/Downloads/FullStack/capstone2/customer-management-app/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport CustomerForm from \"./CustomerForm\";\nimport CustomerList from \"./CustomerList\";\nimport { getCustomers, addCustomer, updateCustomer, deleteCustomer } from '../services/customerService';\nimport '../styles/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [customers, setCustomers] = useState([]);\n  const [selectedCustomer, setSelectedCustomer] = useState(null);\n  useEffect(() => {\n    const fetchCustomers = async () => {\n      const data = await getCustomers();\n      setCustomers(data);\n    };\n    fetchCustomers();\n  }, []);\n  const handleAddCustomer = async customer => {\n    const newCustomer = await addCustomer(customer);\n    setCustomers([...customers, newCustomer]);\n  };\n  const handleUpdateCustomer = async customer => {\n    const updatedCustomer = await updateCustomer(customer.id, customer);\n    setCustomers(customers.map(c => c.id === customer.id ? updatedCustomer : c));\n    setSelectedCustomer(null);\n  };\n  const handleDeleteCustomer = async id => {\n    await deleteCustomer(id);\n    setCustomers(customers.filter(c => c.id !== id));\n    setSelectedCustomer(null);\n  };\n  const handleSelectCustomer = customer => {\n    if (selectedCustomer && selectedCustomer.id === customer.id) {\n      setSelectedCustomer(null);\n    } else {\n      setSelectedCustomer(customer);\n    }\n  };\n  const handleCancel = () => {\n    setSelectedCustomer(null);\n  };\n\n  // ---- Routing Setup ----\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Customer Management\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: [/*#__PURE__*/_jsxDEV(CustomerList, {\n              customers: customers,\n              onSelect: handleSelectCustomer,\n              selectedCustomer: selectedCustomer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CustomerForm, {\n              selectedCustomer: selectedCustomer,\n              onSave: customer => {\n                if (selectedCustomer) {\n                  handleUpdateCustomer({\n                    ...selectedCustomer,\n                    ...customer\n                  });\n                } else {\n                  handleAddCustomer(customer);\n                }\n              },\n              onDelete: handleDeleteCustomer,\n              onCancel: handleCancel\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/customerform\",\n        element: /*#__PURE__*/_jsxDEV(CustomerForm, {\n          selectedCustomer: selectedCustomer,\n          onSave: customer => {\n            if (selectedCustomer) {\n              handleUpdateCustomer({\n                ...selectedCustomer,\n                ...customer\n              });\n            } else {\n              handleAddCustomer(customer);\n            }\n          },\n          onDelete: handleDeleteCustomer,\n          onCancel: handleCancel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/customerlist\",\n        element: /*#__PURE__*/_jsxDEV(CustomerList, {\n          customers: customers,\n          onSelect: handleSelectCustomer,\n          selectedCustomer: selectedCustomer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"iuYQM58gApHDim8qoOzjTr2rVQo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","CustomerForm","CustomerList","getCustomers","addCustomer","updateCustomer","deleteCustomer","jsxDEV","_jsxDEV","App","_s","customers","setCustomers","selectedCustomer","setSelectedCustomer","fetchCustomers","data","handleAddCustomer","customer","newCustomer","handleUpdateCustomer","updatedCustomer","id","map","c","handleDeleteCustomer","filter","handleSelectCustomer","handleCancel","children","path","element","className","fileName","_jsxFileName","lineNumber","columnNumber","onSelect","onSave","onDelete","onCancel","_c","$RefreshReg$"],"sources":["/Users/n0096336/Downloads/FullStack/capstone2/customer-management-app/src/components/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport CustomerForm from \"./CustomerForm\";\nimport CustomerList from \"./CustomerList\";\nimport { getCustomers, addCustomer, updateCustomer, deleteCustomer } from '../services/customerService';\nimport '../styles/styles.css';\n\nconst App = () => {\n    const [customers, setCustomers] = useState([]);\n    const [selectedCustomer, setSelectedCustomer] = useState(null);\n\n    useEffect(() => {\n        const fetchCustomers = async () => {\n            const data = await getCustomers();\n            setCustomers(data);\n        };\n        fetchCustomers();\n    }, []);\n\n    const handleAddCustomer = async (customer) => {\n        const newCustomer = await addCustomer(customer);\n        setCustomers([...customers, newCustomer]);\n    };\n\n    const handleUpdateCustomer = async (customer) => {\n        const updatedCustomer = await updateCustomer(customer.id, customer);\n        setCustomers(customers.map(c => (c.id === customer.id ? updatedCustomer : c)));\n        setSelectedCustomer(null);\n    };\n\n    const handleDeleteCustomer = async (id) => {\n        await deleteCustomer(id);\n        setCustomers(customers.filter(c => c.id !== id));\n        setSelectedCustomer(null);\n    };\n\n    const handleSelectCustomer = (customer) => {\n        if (selectedCustomer && selectedCustomer.id === customer.id) {\n            setSelectedCustomer(null);\n        } else {\n            setSelectedCustomer(customer);\n        }\n    };\n\n    const handleCancel = () => {\n        setSelectedCustomer(null);\n    };\n\n    // ---- Routing Setup ----\n    return (\n        <Router>\n            <Routes>\n                {/* Main App */}\n                <Route path=\"/\" element={\n                    <div className=\"app\">\n                        <h1>Customer Management</h1>\n                        <div className=\"container\">\n                            <CustomerList\n                                customers={customers}\n                                onSelect={handleSelectCustomer}\n                                selectedCustomer={selectedCustomer}\n                            />\n                            <CustomerForm\n                                selectedCustomer={selectedCustomer}\n                                onSave={(customer) => {\n                                    if (selectedCustomer) {\n                                        handleUpdateCustomer({ ...selectedCustomer, ...customer });\n                                    } else {\n                                        handleAddCustomer(customer);\n                                    }\n                                }}\n                                onDelete={handleDeleteCustomer}\n                                onCancel={handleCancel}\n                            />\n                        </div>\n                    </div>\n                } />\n                {/* Just CustomerForm */}\n                <Route path=\"/customerform\" element={\n                    <CustomerForm\n                        selectedCustomer={selectedCustomer}\n                        onSave={(customer) => {\n                            if (selectedCustomer) {\n                                handleUpdateCustomer({ ...selectedCustomer, ...customer });\n                            } else {\n                                handleAddCustomer(customer);\n                            }\n                        }}\n                        onDelete={handleDeleteCustomer}\n                        onCancel={handleCancel}\n                    />\n                } />\n                {/* Just CustomerList */}\n                <Route path=\"/customerlist\" element={\n                    <CustomerList\n                        customers={customers}\n                        onSelect={handleSelectCustomer}\n                        selectedCustomer={selectedCustomer}\n                    />\n                } />\n            </Routes>\n        </Router>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}