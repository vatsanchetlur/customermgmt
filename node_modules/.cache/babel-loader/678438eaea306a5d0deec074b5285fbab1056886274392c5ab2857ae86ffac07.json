{"ast":null,"code":"var _jsxFileName = \"/Users/n0096336/Downloads/FullStack/capstone2/customer-management-app/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport CustomerForm from './CustomerForm';\nimport CustomerList from './CustomerList';\nimport { getCustomers, addCustomer, updateCustomer, deleteCustomer } from '../services/customerService';\nimport '../styles/styles.css';\n\n// Fallback data in case everything else fails\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FALLBACK_CUSTOMERS = [{\n  id: 1,\n  name: 'Mike Johnson',\n  email: 'mikej@abc.com',\n  password: 'mikej'\n}, {\n  id: 2,\n  name: 'Cindy Smith',\n  email: 'cinds@abc.com',\n  password: 'cinds'\n}, {\n  id: 3,\n  name: 'Julio Martin',\n  email: 'julim@abc.com',\n  password: 'julim'\n}];\nconst App = () => {\n  _s();\n  const [customers, setCustomers] = useState([]);\n  const [selectedCustomer, setSelectedCustomer] = useState(null);\n  useEffect(() => {\n    const fetchCustomers = async () => {\n      console.log('Fetching customers...');\n      const data = await getCustomers();\n      console.log('Fetched customers:', data);\n      setCustomers(data);\n    };\n    fetchCustomers();\n  }, []);\n  const handleAddCustomer = async customer => {\n    const newCustomer = await addCustomer(customer);\n    setCustomers([...customers, newCustomer]);\n  };\n  const handleUpdateCustomer = async customer => {\n    // Use the customer's id to update the correct customer\n    const updatedCustomer = await updateCustomer(customer.id, customer);\n    setCustomers(customers.map(c => c.id === customer.id ? updatedCustomer : c));\n    setSelectedCustomer(null);\n  };\n  const handleDeleteCustomer = async id => {\n    await deleteCustomer(id);\n    setCustomers(customers.filter(c => c.id !== id));\n    setSelectedCustomer(null);\n  };\n  const handleSelectCustomer = customer => {\n    // Toggle selection when clicking on already selected customer\n    if (selectedCustomer && selectedCustomer.id === customer.id) {\n      setSelectedCustomer(null);\n    } else {\n      setSelectedCustomer(customer);\n    }\n  };\n  const handleCancel = () => {\n    setSelectedCustomer(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Customer Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(CustomerList, {\n        customers: customers,\n        onSelect: handleSelectCustomer,\n        selectedCustomer: selectedCustomer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CustomerForm, {\n        selectedCustomer: selectedCustomer,\n        onSave: customer => {\n          if (selectedCustomer) {\n            handleUpdateCustomer({\n              ...selectedCustomer,\n              ...customer\n            });\n          } else {\n            handleAddCustomer(customer);\n          }\n        },\n        onDelete: handleDeleteCustomer,\n        onCancel: handleCancel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"iuYQM58gApHDim8qoOzjTr2rVQo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","CustomerForm","CustomerList","getCustomers","addCustomer","updateCustomer","deleteCustomer","jsxDEV","_jsxDEV","FALLBACK_CUSTOMERS","id","name","email","password","App","_s","customers","setCustomers","selectedCustomer","setSelectedCustomer","fetchCustomers","console","log","data","handleAddCustomer","customer","newCustomer","handleUpdateCustomer","updatedCustomer","map","c","handleDeleteCustomer","filter","handleSelectCustomer","handleCancel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelect","onSave","onDelete","onCancel","_c","$RefreshReg$"],"sources":["/Users/n0096336/Downloads/FullStack/capstone2/customer-management-app/src/components/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport CustomerForm from './CustomerForm';\nimport CustomerList from './CustomerList';\nimport { getCustomers, addCustomer, updateCustomer, deleteCustomer } from '../services/customerService';\nimport '../styles/styles.css';\n\n// Fallback data in case everything else fails\nconst FALLBACK_CUSTOMERS = [\n  { id: 1, name: 'Mike Johnson', email: 'mikej@abc.com', password: 'mikej' },\n  { id: 2, name: 'Cindy Smith', email: 'cinds@abc.com', password: 'cinds' },\n  { id: 3, name: 'Julio Martin', email: 'julim@abc.com', password: 'julim' }\n];\n\nconst App = () => {\n    const [customers, setCustomers] = useState([]);\n    const [selectedCustomer, setSelectedCustomer] = useState(null);\n\n    useEffect(() => {\n        const fetchCustomers = async () => {\n            console.log('Fetching customers...');\n            const data = await getCustomers();\n            console.log('Fetched customers:', data);\n            setCustomers(data);\n        };\n        fetchCustomers();\n    }, []);\n\n    const handleAddCustomer = async (customer) => {\n        const newCustomer = await addCustomer(customer);\n        setCustomers([...customers, newCustomer]);\n    };\n\n    const handleUpdateCustomer = async (customer) => {\n        // Use the customer's id to update the correct customer\n        const updatedCustomer = await updateCustomer(customer.id, customer);\n        setCustomers(customers.map(c => (c.id === customer.id ? updatedCustomer : c)));\n        setSelectedCustomer(null);\n    };\n\n    const handleDeleteCustomer = async (id) => {\n        await deleteCustomer(id);\n        setCustomers(customers.filter(c => c.id !== id));\n        setSelectedCustomer(null);\n    };\n\n    const handleSelectCustomer = (customer) => {\n        // Toggle selection when clicking on already selected customer\n        if (selectedCustomer && selectedCustomer.id === customer.id) {\n            setSelectedCustomer(null);\n        } else {\n            setSelectedCustomer(customer);\n        }\n    };\n\n    const handleCancel = () => {\n        setSelectedCustomer(null);\n    };\n\n    return (\n        <div className=\"app\">\n            <h1>Customer Management</h1>\n            <div className=\"container\">\n                <CustomerList \n                    customers={customers} \n                    onSelect={handleSelectCustomer} \n                    selectedCustomer={selectedCustomer} \n                />\n                <CustomerForm \n                    selectedCustomer={selectedCustomer} \n                    onSave={(customer) => {\n                        if (selectedCustomer) {\n                            handleUpdateCustomer({...selectedCustomer, ...customer});\n                        } else {\n                            handleAddCustomer(customer);\n                        }\n                    }}\n                    onDelete={handleDeleteCustomer} \n                    onCancel={handleCancel} \n                />\n            </div>\n        </div>\n    );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}